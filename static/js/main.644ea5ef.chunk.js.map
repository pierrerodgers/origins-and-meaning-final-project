{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["pages","title","details","options","text","next","Page","props","Col","Row","page","map","option","Button","variant","onClick","updatePage","App","useState","currentPage","setCurrentPage","Container","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAAe,I,oCCOTA,G,MAAQ,CACZ,CACEC,MAAQ,iDACRC,QAAU,kDACVC,QAAQ,CACN,CACEC,KAAK,wBACLC,KAAK,GAEP,CACED,KAAK,wBACLC,KAAK,KAKX,CACEJ,MAAQ,eACRC,QAAU,uDACVC,QAAQ,CACN,CACEC,KAAK,wBACLC,KAAK,GAEP,CACED,KAAK,wBACLC,KAAK,OAqBb,SAASC,EAAKC,GAQZ,OAEE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,6BACGF,EAAMG,KAAKT,UAIhB,cAACQ,EAAA,EAAD,UACE,4BACGF,EAAMG,KAAKR,YAIhB,cAACO,EAAA,EAAD,UACGF,EAAMG,KAAKP,QAAQQ,KAAI,SAACC,GACrB,OACA,cAACJ,EAAA,EAAD,UACE,cAACK,EAAA,EAAD,CAAQC,QAAU,UAAuBC,QAAS,WAAOR,EAAMS,WAAWJ,EAAOP,OAAjF,SACGO,EAAOR,MADuBQ,aAYhCK,MAtDf,WAAgB,IAAD,EACyBC,mBAAS,GADlC,mBACNC,EADM,KACOC,EADP,KAQb,OACE,cAACC,EAAA,EAAD,UACE,cAACf,EAAD,CAAMI,KAAMV,EAAMmB,GAAcH,WAPjB,SAASN,GAC1BU,EAAeV,GACfY,QAAQC,IAAI,sBChCDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.644ea5ef.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport Button from 'react-bootstrap/Button';\nimport {Container, Row, Col} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useState } from 'react';\n\nconst pages = [\n  {\n    title : \"Welcome to the Choose your own Adventure game!\",\n    details : \"Details for each page of the game will go here!\",\n    options:[\n      {\n        text:\"Potential next step 1\",\n        next:1\n      },\n      {\n        text:\"Potential next step 2\",\n        next:1\n      }\n    ]\n  },\n\n  {\n    title : \"Second page!\",\n    details : \"More details for each page of the game will go here!\",\n    options:[\n      {\n        text:\"Potential next step 1\",\n        next:0\n      },\n      {\n        text:\"Potential next step 2\",\n        next:0\n      }\n    ]\n  }\n]\n\nfunction App() {\n  const [currentPage, setCurrentPage] = useState(0);\n\n  const updatePage = function(page) {\n    setCurrentPage(page);\n    console.log(\"Page updated\");\n  };\n\n  return (\n    <Container>\n      <Page page={pages[currentPage]} updatePage={updatePage}/>\n    </Container>\n  );\n}\n\nfunction Page(props) {\n  /*\n    props:\n      title : String\n      details : String\n      options : String\n  */\n  \n  return (\n\n    <Col>\n      <Row>\n        <h1>\n          {props.page.title}\n        </h1>\n      </Row>\n\n      <Row>\n        <p>\n          {props.page.details}\n        </p>\n      </Row>\n\n      <Row>\n        {props.page.options.map((option) => {\n            return(\n            <Col>\n              <Button variant = \"primary\" key={option} onClick={() => {props.updatePage(option.next)}}>\n                {option.text}\n              </Button>\n            </Col>)\n          })}\n      </Row>\n\n    </Col>\n    \n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}